{
	"name": "dataflow_factepisode",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableStageTitleEpisode",
						"type": "DatasetReference"
					},
					"name": "sourceStageTitleEpisode"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTableDimTitle1",
						"type": "DatasetReference"
					},
					"name": "DimTitle"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_Dim_Title",
						"type": "DatasetReference"
					},
					"name": "sourceDimTitle2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableFactEpisode",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_Id as string (\"10\")",
				"}",
				"source(output(",
				"          TCONST as string,",
				"          PARENTTCONST as string,",
				"          SEASONNUMBER as decimal(38,0),",
				"          EPISODENUMBER as decimal(38,0),",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceStageTitleEpisode",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          STARTYEAR as decimal(38,0),",
				"          ENDYEAR as decimal(38,0),",
				"          RUNTIMEMINUTES as decimal(38,0),",
				"          ISADULT as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimTitle",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          STARTYEAR as decimal(38,0),",
				"          ENDYEAR as decimal(38,0),",
				"          RUNTIMEMINUTES as decimal(38,0),",
				"          ISADULT as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDimTitle2",
				"sourceStageTitleEpisode select(mapColumn(",
				"          TCONST,",
				"          PARENTTCONST,",
				"          SEASONNUMBER,",
				"          EPISODENUMBER",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"DimTitle select(mapColumn(",
				"          TITLEKEY,",
				"          TCONST",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select2",
				"sourceDimTitle2 select(mapColumn(",
				"          TITLEKEY,",
				"          TCONST,",
				"          PRIMARYTITLE",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select3",
				"select1, select2 join(select1@TCONST == select2@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, select3 join(PARENTTCONST == select3@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          PARENTTITLEKEY = PARENTTCONST,",
				"          SEASONNUMBER,",
				"          EPISODENUMBER,",
				"          EPISODETITLEKEY = select2@TITLEKEY,",
				"          TITLEKEY = select3@TITLEKEY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 derive(DI_JOB_ID = $Job_Id,",
				"          DI_LOAD_DT = currentDate()) ~> derivedColumn1",
				"derivedColumn1 keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EPISODEKEY as decimal(10,0),",
				"          TITLEKEY as decimal(10,0),",
				"          PARENTTITLEKEY as decimal(10,0),",
				"          EPISODETITLEKEY as decimal(10,0),",
				"          SEASONNUMBER as decimal(38,0),",
				"          EPISODENUMBER as decimal(38,0),",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          TITLEKEY = EPISODETITLEKEY,",
				"          SEASONNUMBER,",
				"          EPISODENUMBER,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT",
				"     )) ~> sink1"
			]
		}
	}
}